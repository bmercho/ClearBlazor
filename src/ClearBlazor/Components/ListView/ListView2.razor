@using ClearBlazorInternal
@namespace ClearBlazor
@typeparam TItem
@inherits ListBase<TItem>

<CascadingValue Value="this" IsFixed="false">
    <div id=@Id class=@Classes style=@ComputeStyle()>
        <ScrollViewer @ref=_scrollViewer Width=@_componentWidth Height=@_componentHeight
                      VerticalScrollMode=ScrollMode.Auto
                      HorizontalScrollMode=@GetHorizontalScrollMode()
                      VerticalOverscrollBehaviour=OverscrollBehaviour.None
                      HorizontalOverscrollBehaviour=OverscrollBehaviour.None
                      Style="display: flex;  flex-direction: column-reverse;">
            @* <div style=@GetContainerStyle()> *@
                <div style=@($"display:grid; min-height: {_height1}px; ")>Test</div>
                @if (RowTemplate != null)
                {
                    @foreach (var row in _items.Select((item, index) => new { item, index }))
                    {
                        @* Console.WriteLine($"Index:{row.item.Index} Name:{row.ToString()}"); *@
                        <ListViewRow2 @key=@row RowTemplate=@RowTemplate RowData=@row.item
                                      RowIndex=@row.item.Index
                                      Index=@row.index />
                    }
                }
            @* </div> *@
        </ScrollViewer>
        @if (_loadingUp && ShowLoadingSpinner)
        {
            <Grid BackgroundColor=Color.Transparent Margin=20
                  HorizontalAlignment=Alignment.Center VerticalAlignment=Alignment.Start>
                <Spinner />
            </Grid>
        }
        @if (_loadingDown && ShowLoadingSpinner)
        {
            <Grid BackgroundColor=Color.Transparent Margin=20
                  HorizontalAlignment=Alignment.Center VerticalAlignment=Alignment.End>
                <Spinner />
            </Grid>
        }
    </div>
</CascadingValue>