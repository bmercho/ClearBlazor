@using Microsoft.AspNetCore.Components
@using ClearBlazor
@namespace ClearBlazorInternal
@typeparam TItem
@inherits ListRowBase<TItem>

<CascadingValue Value=this IsFixed="false">
    @if (_parent != null &&
    (_parent._horizontalGridLines == GridLines.All || _parent._horizontalGridLines == GridLines.ContentOnly))
    {
        @if (Index > 0)
        {
            @if (_parent._horizontalGridLines == GridLines.All)
            {
                <div style=@GetHorizontalGridLineStyle(Index+2, Columns.Count) />
            }
            else
            {
                <div style=@GetHorizontalGridLineStyle(Index+2, Columns.Count) />
            }
        }
    }

    <div style=@GetFullRowStyle()
         @onmouseenter=OnMouseEnter
         @onmouseleave=OnMouseLeave
         @onclick=OnRowClicked>

        @for (int col = 0; col < Columns.Count; col++)
        {
            var colIndex = col;
            <div id=@(col == 0 ? RowId : "0") style=@GetRowStyle(Index+2, colIndex+1)>
                <div style=@GetContainerDivStyle()>
                    <div style="display:grid;grid-row: 2 /span 1; ">
                        @if (@Columns[colIndex] == null || @Columns[colIndex].DataTemplate == null)
                        {
                            <TextBlock VerticalAlignment=Alignment.Center TextAlignment=@Columns[colIndex].ContentAlignment>
                                @foreach (var line in GetLines(Columns[colIndex].Field.Invoke(RowData).ToString()))
                                {
                                    @(line)
                                    <br />
                                }
                            </TextBlock>
                        }
                        else
                        {
                            @Columns[colIndex].DataTemplate?.Invoke(RowData)
                        }
                    </div>
                    @if (VerticalGridLines == GridLines.ContentOnly ||
                   VerticalGridLines == GridLines.All)
                    {
                        @if (colIndex != Columns.Count - 1)
                        {
                            <div style=@GetVerticalGridLineStyle(colIndex+3) />
                        }
                    }
                </div>
            </div>
        }

        @if (RowTemplate != null)
        {
            <div id=@RowData.ListItemId class="@Classes"
                 @onmouseenter=OnMouseEnter
                 @onmouseleave=OnMouseLeave
                 @onclick=OnRowClicked>
                @RowTemplate(RowData)
            </div>
        }
    </div>
</CascadingValue>



