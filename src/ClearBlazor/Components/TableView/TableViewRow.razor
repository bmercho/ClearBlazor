@using Microsoft.AspNetCore.Components
@namespace ClearBlazor
@typeparam TItem
@inherits ListRowBase<TItem>

<CascadingValue Value=this IsFixed="false">
    @if (_parent != null &&
         (_parent.HorizontalGridLines == GridLines.All || _parent.HorizontalGridLines == GridLines.ContentOnly))
    {
        @if (Index != 0)
        {
            <div style=@GetHorizontalGridLineStyle(Index+2, Columns.Count) />
        }
    }
    <div style=@GetFullRowStyle()
         @onmouseenter=OnMouseEnter
         @onmouseleave=OnMouseLeave
         @onclick=OnRowClicked>

        @for (int col = 0; col < Columns.Count; col++)
        {
            var colIndex = col;
            <div id=@(col == 0 ? RowId : "0") style=@GetRowStyle(Index+2, colIndex+1)>
                @if (@Columns[colIndex] == null || @Columns[colIndex].DataTemplate == null)
                {
                    <TextBlock TextAlignment=@Columns[colIndex].ContentAlignment>
                        @foreach (var line in GetLines(Columns[colIndex].Field.Invoke(RowData).ToString()))
                        {
                            @(line)
                            <br />
                        }
                    </TextBlock>
                }
                else
                {
                    @Columns[colIndex].DataTemplate(RowData)
                }
            </div>
        }
    </div>
</CascadingValue>



