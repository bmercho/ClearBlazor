@namespace ClearBlazor
@inherits ContainerInputBase<string>


<CascadingValue Value="this" IsFixed="false">
    <div id=@Id class=@Classes style=@ComputeStyle()>
        <StackPanel Orientation="Orientation.Portrait">
            @if (!string.IsNullOrEmpty(Label))
            {
                <div style=@GetLabelStyle()>@Label</div>
            }
            <Grid BackgroundColor=@GetBackgroundColor() BorderThickness=@GetBorderThickness()
                  BorderColor=@GetBorderColor() CornerRadius=@GetCornerRadius() Columns="*,auto,auto">
                @if (Lines > 1)
                {
                    <textarea id="@id" @ref="TextInput" style=@ComputeInputStyle() placeholder=@Placeholder type=@GetInputType()
                              readonly=@IsReadOnly disabled=@IsDisabled value=@StringValue
                              rows=@Lines
                              @onmouseenter="OnMouseEnter"
                              @onmouseleave="OnMouseLeave"
                              @onfocusin="OnFocusIn"
                              @onfocusout="OnFocusOut"
                              @oninput="OnInput"
                              @onchange="OnChange" />

                }
                else
                {
                    <input id="@id" @ref="TextInput" style=@ComputeInputStyle() placeholder=@Placeholder type=@GetInputType()
                           readonly=@IsReadOnly disabled=@IsDisabled value=@StringValue
                           @onmouseenter="OnMouseEnter"
                           @onmouseleave="OnMouseLeave"
                           @onfocusin="OnFocusIn"
                           @onfocusout="OnFocusOut"
                           @oninput="OnInput"
                           @onchange="OnChange" />
                }

                @if (Clearable && StringValue?.Length > 0)
                {
                    <IconButton Column=1 Icon="@Icons.Material.Filled.Close" 
                                Size=@Size Color=@Color.Dark  OnClicked="ClearEntry" />
                }
                @if (ValidationErrorLocation == ValidationErrorLocation.ErrorIcon && !IsValid)
                {
                    <Icon Column=2 IconName="@Icons.Material.Filled.FmdBad"
                          Size=@Size ToolTip=@ValidationMessage Color=@Color.Error />
                }
            </Grid>
            @if (ValidationErrorLocation == ValidationErrorLocation.Inline && !IsValid)
            {
                <TextBlock TextWrapping="TextWrap.WrapOnNewLines" 
                           Color=@Color.Error>@ValidationMessage</TextBlock>
            }
        </StackPanel>
    </div>
</CascadingValue>



