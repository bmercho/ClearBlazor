@namespace ClearBlazor
@inherits PanelBase
@using SkiaSharp
@using SkiaSharp.Views.Blazor
@using Microsoft.JSInterop;


<CascadingValue Value=this IsFixed=false>
    @if (LoadingComplete)
    {
        <div style=@GetStyle()>
            <div style="height: 100%; width:100%; display: grid;">
                <div style="display:grid;overflow:hidden;">
                    @ChildContent
                    <SkiaDrawingCanvas @ref=_canvasView 
                                       OnPaint=PaintCanvas
                                       OnCanvasClick="@(e => HandleEvent(EventUtils.DomEvent.Click,e))"
                                       OnCanvasDblClick="@(e => HandleEvent(EventUtils.DomEvent.DblClick,e))"
                                       OnCanvasMouseDown="@(e => HandleEvent(EventUtils.DomEvent.MouseDown,e))"
                                       OnCanvasMouseMove="@(e => HandleEvent(EventUtils.DomEvent.MouseMove, e))"
                                       OnCanvasMouseUp="@(e => HandleEvent(EventUtils.DomEvent.MouseUp, e))"
                                       OnCanvasMouseOver="@(e => HandleEvent(EventUtils.DomEvent.MouseOver, e))"
                                       OnCanvasMouseOut="@(e => HandleEvent(EventUtils.DomEvent.MouseOut, e))"
                                       OnCanvasContextMenu="@(e => HandleEvent(EventUtils.DomEvent.ContextMenu, e))"
                                       OnCanvasMouseWheel="@(e => HandleEvent(EventUtils.DomEvent.MouseWheel, e))"
                                       OnCanvasPointerCancel="@(e => HandleEvent(EventUtils.DomEvent.PointerCancel, e))"
                                       OnCanvasPointerDown="@(e => HandleEvent(EventUtils.DomEvent.PointerDown, e))"
                                       OnCanvasPointerEnter="@(e => HandleEvent(EventUtils.DomEvent.PointerEnter, e))"
                                       OnCanvasPointerLeave="@(e => HandleEvent(EventUtils.DomEvent.PointerLeave, e))"
                                       OnCanvasPointerMove="@(e => HandleEvent(EventUtils.DomEvent.PointerMove, e))"
                                       OnCanvasPointerOut="@(e => HandleEvent(EventUtils.DomEvent.PointerOut, e))"
                                       OnCanvasPointerOver="@(e => HandleEvent(EventUtils.DomEvent.PointerOver, e))"
                                       OnCanvasPointerUp="@(e => HandleEvent(EventUtils.DomEvent.PointerUp, e))"
                                       OnCanvasGotPointerCapture="@(e => HandleEvent(EventUtils.DomEvent.GotPointerCapture, e))"
                                       OnCanvasLostPointerCapture="@(e => HandleEvent(EventUtils.DomEvent.LostPointerCapture, e))"
                                       OnCanvasTouchStart="@(e => HandleEvent(EventUtils.DomEvent.TouchStart, e))"
                                       OnCanvasTouchEnd="@(e => HandleEvent(EventUtils.DomEvent.TouchEnd, e))"
                                       OnCanvasTouchMove="@(e => HandleEvent(EventUtils.DomEvent.TouchMove, e))"
                                       OnCanvasTouchEnter="@(e => HandleEvent(EventUtils.DomEvent.TouchEnter, e))"
                                       OnCanvasTouchLeave="@(e => HandleEvent(EventUtils.DomEvent.TouchLeave, e))"
                                       OnCanvasTouchCancel="@(e => HandleEvent(EventUtils.DomEvent.TouchCancel, e))"/>
                </div>
            </div>
        </div>
    }
</CascadingValue>

