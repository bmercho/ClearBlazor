@using ClearBlazor
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using System.ComponentModel
@using System.ComponentModel.DataAnnotations
@using System.Timers
@namespace ClearBlazorTest
@inherits LayoutComponentBase
@inject NavigationManager NavManager
@implements IHandleEvent

@* <RootComponent> *@
@*     <NonVirtualizedTable Height=150 BorderThickness=1 CornerRadius=4 VerticalGridLines=GridLines.All HorizontalGridLines=GridLines.All
                         Items=@People Margin=10 Padding=5 RowSpacing=10 ColumnSpacing=20 ColumnDefs="auto,auto,2*">
        <TableColumn Label="PersonId" TItem=Person Field=@(x =>x.PersonId)>
            <HeaderTemplate Context=Header>
                <TextBlock FontWeight=@((int)FontWeight.Bold)>@(Header + " !!")</TextBlock>
            </HeaderTemplate>
            <DataTemplate Context=Item>
                <TextBlock>@(Item.PersonId + " **")</TextBlock>
            </DataTemplate>
        </TableColumn>
        <TableColumn Label="Name" TItem=Person Field=@(x =>x.Name) />
        <TableColumn Label="BirthDate" TItem=Person Field=@(x =>x.BirthDate) />
    </NonVirtualizedTable>
 *@
@*     @if (_showTestResizeObserver)
    {
        <StackPanel Orientation=Orientation.Portrait>
            <Button Width=120 Onclicked=@Clear>Clear</Button>
            <TestResizeObserver />
        </StackPanel>
    }
</RootComponent>
 *@

<RootComponent>
    <Grid Rows="auto,*">
         <AppBar Row="0" Padding="10" BackgroundColor="Color.BackgroundGrey">
            <IconButton Dock="Dock.Left" Icon="@Icons.Material.Filled.Menu" OnClicked=@MenuClicked />
            <TextBlock Typo="Typo.H6" HorizontalAlignment="Alignment.Center"
                       VerticalAlignment="Alignment.Center">Clear Blazor</TextBlock>
        </AppBar>
        <Drawer @ref=Drawer Row=1 @bind-Open=Open DrawerLocation=DrawerLocation.Left DrawerMode="DrawerMode.Responsive">
            <DrawerContent>
                <Grid>
                    <ScrollViewer VerticalScrollMode="ScrollMode.Enabled">
                        <ListBox TListBox="string" Margin="0,10,0,10">
                            <ListBoxItem Text="Home" HRef="/" OnClicked=@Close />
                            <ListBoxItem Text="Components">
                                <ListBoxItem Text="Layout" InitiallyExpanded=false>
                                    <ListBoxItem Text="Grid" HRef="/Grid" OnClicked=@Close />
                                    <ListBoxItem Text="Stack Panel" HRef="/StackPanel" OnClicked=@Close />
                                    <ListBoxItem Text="Wrap Panel" HRef="/WrapPanel" OnClicked=@Close />
                                    <ListBoxItem Text="Dock Panel" HRef="/DockPanel" OnClicked=@Close />
                                    <ListBoxItem Text="Uniform Grid" HRef="/UniformGrid" OnClicked=@Close />
                                    <ListBoxItem Text="Tabs" HRef="/Tabs" OnClicked=@Close />
                                    <ListBoxItem Text="Drawer" HRef="/Drawer" OnClicked=@Close />
                                    <ListBoxItem Text="Drawing Canvas" HRef="/DrawingCanvas" OnClicked=@Close />
                                    <ListBoxItem Text="Card" HRef="/Card" OnClicked=@Close />
                                </ListBoxItem>
                                <ListBoxItem Text="Table View" HRef="/TableView" OnClicked=@Close />
                                <ListBoxItem Text="TextBlock" HRef="/TextBlock" OnClicked=@Close />
                                <ListBoxItem Text="Icons" HRef="/MaterialIcon" OnClicked=@Close />
                                <ListBoxItem Text="Avatars" HRef="/Avatar" OnClicked=@Close />
                                <ListBoxItem Text="AppBar" HRef="/AppBar" OnClicked=@Close />
                                <ListBoxItem Text="Images" HRef="/Image" OnClicked=@Close />
                                <ListBoxItem Text="Buttons" InitiallyExpanded=false>
                                    <ListBoxItem Text="Button" HRef="/Button" OnClicked=@Close />
                                    <ListBoxItem Text="Icon Button" HRef="/IconButton" OnClicked=@Close />
                                    <ListBoxItem Text="Toggle Icon Button" HRef="/ToggleIconButton" OnClicked=@Close />
                                    <ListBoxItem Text="Button Group" HRef="/ButtonGroup" OnClicked=@Close />
                                </ListBoxItem>
                                <ListBoxItem Text="Pickers" InitiallyExpanded=false>
                                    <ListBoxItem Text="Color Picker" HRef="/ColorPicker" OnClicked=@Close />
                                    <ListBoxItem Text="Date Picker" HRef="/DatePicker" OnClicked=@Close />
                                    <ListBoxItem Text="Time Picker" HRef="/TimePicker" OnClicked=@Close />
                                </ListBoxItem>
                                <ListBoxItem Text="ToolTip" HRef="/ToolTip" OnClicked=@Close />
                                <ListBoxItem Text="Toolbar" HRef="/Toolbar" OnClicked=@Close />
                                <ListBoxItem Text="ListBox" HRef="/ListBox" OnClicked=@Close />
                                <ListBoxItem Text="ListView" HRef="/ListView" OnClicked=@Close />
                                <ListBoxItem Text="Popup" HRef="/Popup" OnClicked=@Close />
                                <ListBoxItem Text="Inputs" InitiallyExpanded=false>
                                    <ListBoxItem Text="Check Box" HRef="/CheckBox" OnClicked=@Close />
                                    <ListBoxItem Text="Switch" HRef="/Switch" OnClicked=@Close />
                                    <ListBoxItem Text="Radio Button" HRef="/Radio" OnClicked=@Close />
                                    <ListBoxItem Text="Text Input" HRef="/TextInput" OnClicked=@Close />
                                    <ListBoxItem Text="Numeric Input" HRef="/NumericInput" OnClicked=@Close />
                                    <ListBoxItem Text="Select" HRef="/Select" OnClicked=@Close />
                                    <ListBoxItem Text="Slider" HRef="/Slider" OnClicked=@Close />
                                    <ListBoxItem Text="Color Picker" HRef="/ColorPickerInput" OnClicked=@Close />
                                    <ListBoxItem Text="Date Picker" HRef="/DatePickerInput" OnClicked=@Close />
                                    <ListBoxItem Text="Time Picker" HRef="/TimePickerInput" OnClicked=@Close />
                                </ListBoxItem>
                                <ListBoxItem Text="Forms" InitiallyExpanded=false>
                                    <ListBoxItem Text="Form" HRef="/Form" OnClicked=@Close />
                                    <ListBoxItem Text="Auto Form" HRef="/AutoForm" OnClicked=@Close />
                                </ListBoxItem>
                                <ListBoxItem Text="Spinner" HRef="/Spinner" OnClicked=@Close />
                                <ListBoxItem Text="Virtualization" InitiallyExpanded=true>
                                    <ListBoxItem Text="Non Virtualized List" HRef="/NonVirtualizedList" OnClicked=@Close />
                                    <ListBoxItem Text="Virtualized List" HRef="/VirtualizedLIst" OnClicked=@Close />
                                    <ListBoxItem Text="Infinite Scroller List" HRef="/InfiniteScrollerList" OnClicked=@Close />
                                    <ListBoxItem Text="Non Virtualized Table" HRef="/NonVirtualizedTable" OnClicked=@Close />
                                </ListBoxItem>
                                <ListBoxItem Text="Logs" HRef="/Logs" OnClicked=@Close />
                            </ListBoxItem>
                        </ListBox>
                    </ScrollViewer>
                </Grid>
            </DrawerContent>
            <DrawerBody>
                <Grid Margin="10">
                    <DockPanel>
                        <Grid Dock="Dock.Top" BorderThickness="0" HorizontalAlignment="Alignment.End">
                            <IconButton OnClicked=@OnClicked Icon=@GetIcon() ToolTip="Toggle Light/Dark Mode" Margin="0,10,0,0" />
                        </Grid>
                        <Grid>
                            @Body
                        </Grid>
                    </DockPanel>
                </Grid>
            </DrawerBody>
        </Drawer>
    </Grid>
 </RootComponent>

@code {
    Drawer Drawer;

    bool Open { get; set; } = false;

    private void Toggle()
    {
        Open = !Open;
    }

    private string GetIcon()
    {
        if (ThemeManager.IsDarkMode)
            return Icons.Material.Filled.LightMode;
        else
            return Icons.Material.Filled.DarkMode;
    }

    private void OnClicked()
    {
        ThemeManager.IsDarkMode = !ThemeManager.IsDarkMode;
    }

    private void Close()
    {
        if (Drawer.CurrentDrawerMode == DrawerMode.Temporary)
        {
            Open = false;
            StateHasChanged();
        }
    }

    private void MenuClicked()
    {
        Toggle();
        StateHasChanged();
    }

    private void GotoPage(string page)
    {
        NavManager.NavigateTo($"/{page}");
    }

    private void CheckedChanged()
    {
        StateHasChanged();
    }

    Task IHandleEvent.HandleEventAsync(
          EventCallbackWorkItem callback, object? arg) => callback.InvokeAsync(arg);

    public enum TestEnum
    {
        Enum1, Enum2, Enum3, Enum4
    }

    public TestEnum EnumValue { get; set; } = TestEnum.Enum2;


    List<string> StringValues = new() { "Potato", "Apricot" };
    List<double> DoubleValues = new() { 5.6, 4.0 };

    public List<string> Values { get; set; } = new() { "String2", "String3" };

    void Clicked()
    {
        StateHasChanged();
    }
    bool _showTestResizeObserver = true;
    void Clear()
    {
        _showTestResizeObserver = false;
        StateHasChanged();
    }

    record Person(int PersonId, string Name, DateOnly BirthDate);

    List<Person> People = new List<Person>
    {
        new Person(10895, "Jean Martin", new DateOnly(1985, 3, 16)),
        new Person(10944, "António Langa", new DateOnly(1991, 12, 1)),
        new Person(11203, "Julie Smith", new DateOnly(1958, 10, 10)),
        new Person(11205, "Nur Sari", new DateOnly(1922, 4, 27)),
        new Person(11898, "Jose Hernandez", new DateOnly(2011, 5, 3)),
        new Person(12130, "Kenji Sato", new DateOnly(2004, 1, 9)),
        new Person(12131, "Kenfgsji dfgs", new DateOnly(2004, 1, 9)),
        new Person(12132, "Kesdfgsdgnji Sasdfgdgto", new DateOnly(2004, 1, 9)),
        new Person(12133, "Kdfgsenji Safdgsdto", new DateOnly(2004, 1, 9)),
        new Person(12134, "Ksdfgenji Sadfgto", new DateOnly(2004, 1, 9)),
        new Person(12135, "Kesdnji Savxcvto", new DateOnly(2004, 1, 9)),
        new Person(12136, "Keccnji Sazxcto", new DateOnly(2004, 1, 9)),
        new Person(12137, "Kexcnji Sazxczxto", new DateOnly(2004, 1, 9)),
        new Person(12138, "Kewewrnji Sagkjhto", new DateOnly(2004, 1, 9)),
        new Person(12139, "Kegafdsgnji Savbmcto", new DateOnly(2004, 1, 9)),
        new Person(12140, "Keafganji mnmmSato", new DateOnly(2004, 1, 9)),
        new Person(12141, "gSmcato", new DateOnly(2004, 1, 9)),
    };

}