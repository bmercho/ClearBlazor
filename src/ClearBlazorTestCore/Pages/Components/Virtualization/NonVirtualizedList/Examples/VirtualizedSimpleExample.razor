@namespace ClearBlazorTest
<StackPanel BackgroundColor=Color.Transparent Orientation=Orientation.Portrait Spacing=20 Padding=20>
    <NonVirtualizedList Height=300 Width=150 CornerRadius=4 BoxShadow=4 Margin=10 Padding=10
                @ref="List" VirtualizeMode=VirtualizeMode.Virtualize Items=@items HorizontalContentAlignment=Alignment.Start>
        <RowTemplate Context=row>
            <TextBlock>@row.rowData</TextBlock>
        </RowTemplate>
    </NonVirtualizedList>
    <WrapPanel ColumnSpacing=10 RowSpacing=10 Direction=Direction.Row>
        <Button OnClicked=@OnGoto1000Start>Goto 1000 (start)</Button>
        <Button OnClicked=@OnGoto5000Center>Goto 5000 (center)</Button>
        <Button OnClicked=@OnGoto7000End>Goto 7000 (end)</Button>
        <Button OnClicked=@OnAddNewItem>Add new item</Button>
        <Button OnClicked=@OnGotoEnd>Goto end</Button>
        <Button OnClicked=@OnGotoStart>Goto start</Button>
        <Button OnClicked=@OnAddNewItemGotoEndIfAtEnd>Add new item and goto end if at end</Button>
    </WrapPanel>
    @*     <NonVirtualizedList Height=300 Width=150 CornerRadius=4 BoxShadow=4 Margin=10 Padding=10
                @ref="Virtualize" Items=@items HorizontalContentAlignment=Alignment.Center>
        <RowTemplate Context=row>
            <TextBlock>@row.rowData</TextBlock>
        </RowTemplate>
    </NonVirtualizedList>
    <NonVirtualizedList Height=300 Width=150 CornerRadius=4 BoxShadow=4 Margin=10 Padding=10
                @ref="Virtualize" Items=@items HorizontalContentAlignment=Alignment.End>
        <RowTemplate Context=row>
            <TextBlock>@row.rowData</TextBlock>
        </RowTemplate>
    </NonVirtualizedList>
 *@
    </StackPanel>

@code {

    NonVirtualizedList<string> List = null!;
    private List<string> items = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        for (int i = 0; i < 10000; i++)
        {
            items.Add(i.ToString());
        }
    }

    async Task OnGoto1000Start()
    {
        await List.GotoIndex(1000, Alignment.Start);
    }

    async Task OnGoto5000Center()
    {
        await List.GotoIndex(5000, Alignment.Center);
    }

    async Task OnGoto7000End()
    {
        await List.GotoIndex(7000, Alignment.End);
    }

    async Task OnAddNewItem()
    {
        var index = items.Count();
        items.Add(items.Count().ToString());
        await List.Refresh();
    }

    async Task OnGotoEnd()
    {
        await List.GotoEnd();
    }

    async Task OnGotoStart()
    {
        await List.GotoStart();
    }

    async Task OnAddNewItemGotoEndIfAtEnd()
    {
        var atEnd = await List.AtEnd();

        var index = items.Count;
        items.Add(items.Count().ToString());
        await List.Refresh();
        if (atEnd)
            await List.GotoEnd();
    }

}