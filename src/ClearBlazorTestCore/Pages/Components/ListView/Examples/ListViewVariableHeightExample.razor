@namespace ClearBlazorTest
<Grid Columns="auto,auto,*">
    <ListView Column=0 HorizontalAlignment=Alignment.Start Margin=40
              @bind-SelectedItem=_selectedItem @bind-SelectedItems=_selectedItems
              DataProvider=@GetData Width=300 Height=500 BorderThickness="1"
              BorderColor=Color.Dark CornerRadius="4" SelectionMode=@_selectionMode
              HoverHighlight=@_hoverHighlight VariableItemHeight=true
              AllowSelectionToggle=@_allowSelectionToggle>
        <RowTemplate Context=Item>
            <Grid BackgroundColor=Color.BackgroundGrey BorderThickness=1 CornerRadius=8 
                  Margin=10 Padding=10 Columns="*,3*" Rows="*,auto">
                <MaterialIcon Icon=@Item.Item.IconName VerticalAlignment=Alignment.Center />
                <TextBlock VerticalAlignment=Alignment.Center Column=1> @(Item.Item.Name)</TextBlock>
                <TextBlock VerticalAlignment=Alignment.Center Column=1 Row=1> @(Item.Item.Message)</TextBlock>
            </Grid>
        </RowTemplate>
    </ListView>
    <StackPanel Column=1>
        <RadioGroup Margin=20 Label="Selection mode" @bind-Value=_selectionMode>
            @foreach (SelectionMode mode in Enum.GetValues(typeof(SelectionMode)))
            {
                <Radio Label=@mode.ToString() Value="@mode" />
            }
        </RadioGroup>
        <CheckBox Margin=20 @bind-Checked=_allowSelectionToggle Label="Allow selection toggle (single selection only)" />
        <CheckBox Margin=20 @bind-Checked=_hoverHighlight Label="Highlight on hover" />
        <TextBlock Margin=20>Selection=@_selectedItem?.Name</TextBlock>

        <TextBlock Margin=20>Selections=@string.Join(",", _selectedItems.Select(s => s.Name))</TextBlock>
    </StackPanel>
</Grid>

@code {
    private List<TestViewItem> _testData = new();

    private class TestViewItem
    {
        public string Name { get; set; } = string.Empty;
        public string Message { get; set; } = string.Empty;
        public string IconName { get; set; } = string.Empty;
    }

    private TestViewItem _selectedItem = null!;
    private List<TestViewItem> _selectedItems = new();
    private SelectionMode _selectionMode = SelectionMode.None;
    private bool _allowSelectionToggle = false;
    private bool _hoverHighlight = true;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        for (int i = 0; i < 10000; i++)
        {
            _testData?.Add(new TestViewItem { Name = $"Item # {i}", Message=GetMessage(i), IconName = GetIconName(i) });
        }
    }

    async Task<(int totalNumItem, IEnumerable<TestViewItem> items)> GetData(ClearBlazor.DataProviderRequest request)
    {
        await Task.CompletedTask;
        return (_testData.Count(), _testData.Skip(request.StartIndex).Take(request.Count));
    }

    private string GetIconName(int i)
    {
        switch (i % 5)
        {
            case 0:
                return Icons.Material.Filled.Add;
            case 1:
                return Icons.Material.Filled.AccessAlarm;
            case 2:
                return Icons.Material.Filled.Deck;
            case 3:
                return Icons.Material.Filled.Landscape;
            case 4:
                return Icons.Material.Filled.Airlines;
        }
        return Icons.Material.Filled.Add;
    }

    private string GetMessage(int i)
    {
        switch (i % 8)
        {
            case 0:
                return "Lorem ipsum dolor";
            case 1:
                return "Lorem ipsum dolor, sit amet consectetur adipisicing elit.Dolorem";
            case 2:
                return "Lorem ipsum dolor, sit amet consectetur adipisicing elit.Dolorem ab, magnam quaerat praesentium delectus iure, consequuntur commodi exercitationem asperiores ad deleniti iste rem eius.Saepe consequatur consequuntur ";
            case 3:
                return "Lorem ipsum dolor, sit amet consectetur adipisicing elit.Dolorem ab, magnam quaerat praesentium delectus iure, consequuntur commodi exercitationem asperiores";
            case 4:
                return "Lorem ipsum dolor, sit amet consectetur adipisicing elit.Dolorem ab, magnam quaerat praesentium delectus iure, consequuntur commodi exercitationem asperiores ad deleniti iste rem eius.Saepe consequatur consequuntur blanditiis velit dolore.";
            case 5:
                return "Lorem ipsum dolor, sit amet consectetur adipisicing elit.Dolorem ab, magnam quaerat praesentium delectus iure";
            case 6:
                return "Lorem ipsum dolor, sit amet consectetur adipisicing elit.Dolorem ab, magnam quaerat praesentium delectus iure, consequuntur commodi exercitationem .";
            case 7:
                return "Lorem ipsum dolor, sit amet consectetur adipisicing elit.Dolorem ab, magnam quaerat praesentium delectus iure, consequuntur commodi exercitationem asperiores ad deleniti iste rem eius.";
        }
        return "Lorem ipsum dolor";
        
    }

}