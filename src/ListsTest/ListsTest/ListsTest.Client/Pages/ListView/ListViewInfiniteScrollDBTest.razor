@page "/ListViewInfiniteScrollDB"
@namespace ListsTest
@using Data;


<StackPanel Orientation=Orientation.Portrait>
    <TextBlock HorizontalAlignment=Alignment.Start Typo=Typo.H4>List View</TextBlock>
    <TextBlock HorizontalAlignment=Alignment.Start>VirtualizationMode:InfiniteScroll : from DB (5000 rows loaded as required)</TextBlock>
    <Grid Columns="800,auto,*" Rows="600,*">
        <ListView @ref=_list TItem=TestListRow CornerRadius=4 BorderThickness=1 Margin=10 Padding=10
                  VirtualizeMode=VirtualizeMode.InfiniteScroll
                  DataProvider=@GetItemsFromDatabase
                  @bind-SelectedItem=_selectedItem
                  @bind-SelectedItems=_selectedItems
                  HoverHighlight=@_hoverHighlight
                  AllowSelectionToggle=@_allowSelectionToggle
                  SelectionMode=@_selectionMode
                  PageSize=10
                  ShowLoadingSpinner=true>
            <RowTemplate Context=row>
                <Grid Columns="auto,*" Margin=20 Padding=10 CornerRadius=8 BorderThickness=1>
                    <MaterialIcon Icon=@row.IconName Margin=0,5,0,0 />
                    <StackPanel Column=1 Orientation=Orientation.Portrait>
                        <TextBlock Typo=Typo.H6 TextWrapping=TextWrap.Wrap Margin="0,0,10,10">
                            @(row.ToString() + $"({row.ItemIndex})")
                        </TextBlock>
                        <TextBlock Column=1 TextWrapping=TextWrap.Wrap Margin="0,0,0,10">
                            @row.Notes
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </RowTemplate>
        </ListView>

        @if (BrowserSizeService.DeviceSize >= DeviceSize.Compact)
        {
            <StackPanel Column=1>
                <RadioGroup Margin=20 Label="Selection mode" @bind-Value=_selectionMode
                            @bind-Value:after=@SelectionModeChanged>
                    @foreach (SelectionMode mode in Enum.GetValues(typeof(SelectionMode)))
                    {
                        <Radio Label=@mode.ToString() Value="@mode" />
                    }
                </RadioGroup>
                <CheckBox Margin=20 @bind-Checked=_allowSelectionToggle Label="Allow selection toggle (single selection only)" />
                <CheckBox Margin=20 @bind-Checked=_hoverHighlight Label="Highlight on hover" />
                <TextBlock Margin=20>Selection=@_selectedItem?.ToString()</TextBlock>

                <TextBlock Margin=20>Selections=@string.Join(",", _selectedItems.Select(s => s.ToString()))</TextBlock>
                <Button Margin=10 Width=150 HorizontalAlignment=Alignment.Start OnClicked=@ClearSelections>Clear selections</Button>
                <CheckBox @bind-Checked=_addDelay @bind-Checked:after=Refresh Label="Add delay" />
            </StackPanel>
            <WrapPanel Row=1 ColumnSpan=3 ColumnSpacing=10 RowSpacing=10 Direction=Direction.Row>
                <Button Row=1 ColumnSpan=3 HorizontalAlignment=Alignment.Start OnClicked=@OnGotoStart>Goto Start</Button>
                <StackPanel Orientation=Orientation.Landscape>
                    <Button OnClicked=@CheckAtStart>CheckAtStart</Button>
                    <TextBlock Margin="0,5,0,5" VerticalAlignment=Alignment.Center>@_atStart</TextBlock>
                </StackPanel>
            </WrapPanel>
        }
    </Grid>
</StackPanel>

