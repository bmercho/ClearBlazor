@inherits LayoutComponentBase

<RootComponent>
    <Grid Rows=auto,*>
        <AppBar Row=0 Padding=10>
            <IconButton Dock=Dock.Left Icon=@Icons.Material.Filled.Menu OnClicked=@MenuClicked />
            <TextBlock Typo=Typo.H6 HorizontalAlignment=Alignment.Center
                       VerticalAlignment=Alignment.Center>ClearBlazor Server Example</TextBlock>
            <IconButton Dock=Dock.Right OnClicked=@OnClicked Icon=@GetIcon() ToolTip="Light/Dark"
                        ToolTipPosition=ToolTipPosition.Bottom
                        Margin="0,20,0,0" />
        </AppBar>
        <Drawer @ref=Drawer Row=1 @bind-Open=Open DrawerLocation=DrawerLocation.Left
                DrawerMode=DrawerMode.Responsive>
            <DrawerContent>
                <ScrollViewer VerticalScrollMode=ScrollMode.Enabled>
                    <ListBox TListBox=string Margin=0,10,0,10>
                        <ListBoxItem Text=Home HRef=/ OnClicked=@Close />
                        <ListBoxItem Text=Page1 HRef=/Page1 OnClicked=@Close />
                        <ListBoxItem Text=Page2 HRef=/Page2 OnClicked=@Close />
                    </ListBox>
                </ScrollViewer>
            </DrawerContent>
            <DrawerBody>
                @Body
            </DrawerBody>
        </Drawer>
    </Grid>
</RootComponent>

@code {

    Drawer Drawer = null!;

    bool Open { get; set; } = false;

    private void Toggle()
    {
        Open = !Open;
    }

    private string GetIcon()
    {
        if (ThemeManager.IsDarkMode)
            return Icons.Material.Filled.LightMode;
        else
            return Icons.Material.Filled.DarkMode;
    }

    private void OnClicked()
    {
        ThemeManager.IsDarkMode = !ThemeManager.IsDarkMode;
    }

    private void Close()
    {
        if (Drawer.CurrentDrawerMode == DrawerMode.Temporary)
        {
            Open = false;
            StateHasChanged();
        }
    }

    private void MenuClicked()
    {
        Toggle();
        StateHasChanged();
    }
}