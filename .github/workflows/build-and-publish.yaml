name: Version Charts 

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
    
jobs:
  build-and-publish:
    if: ${{ startsWith(github.event.commits[0].message, 'Version Package') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache .pnpm-store
        uses: actions/cache@v3.2.3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - uses: pnpm/action-setup@v4
        with:
          version: 8.15.2
          run_install: true

      - name: Get Version
        id: get-version
        run: |
          version=$(jq -r .version src/ClearBlazor/package.json)
          echo "versionToPublish=true" >> $GITHUB_OUTPUT

      - name: Build Nuget Package
        run: dotnet pack src/ClearBlazor/ClearBlazor.csproj --configuration Release

      - name: Create Release
        id: changesets
        uses: changesets/action@v1
        with:
          publish: changeset tag
          createGitHubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Nuget Package to Github Release
        run: |
          gh release upload ${{ steps.get-version.outputs.versionToPublish }} "src/ClearBlazor/bin/Release/ClearBlazor.${{ steps.get-version.outputs.versionToPublish }}.nupkg"

      - name: Publish to Nuget
        run: |
          echo "TODO publish to nuget package: ClearBlazor.${{ steps.get-version.outputs.versionToPublish }}.nupkg"





