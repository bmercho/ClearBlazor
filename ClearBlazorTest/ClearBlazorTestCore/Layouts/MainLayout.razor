@using ClearBlazor
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using System.ComponentModel
@using System.ComponentModel.DataAnnotations
@namespace ClearBlazorTest
@inherits LayoutComponentBase
@inject NavigationManager NavManager
@implements IHandleEvent

@*  <RootComponent>
    <Grid Width="200" Height="200" BoxShadow="1" />
</RootComponent>
 *@  
 
 
<RootComponent>
    <Grid Rows="auto,*">
         <AppBar Row="0" Padding="10" BackgroundColour="Color.BackgroundGrey">
            <IconButton Dock="Dock.Left" Icon="@Icons.Material.Filled.Menu" OnClicked=@MenuClicked />
            <TextBlock Typo="Typo.H6" HorizontalAlignment="Alignment.Center" 
                       VerticalAlignment="Alignment.Center">Clear Blazor</TextBlock>
        </AppBar>
        <Drawer @ref=Drawer Row=1 @bind-Open=Open DrawerLocation=DrawerLocation.Left DrawerMode="DrawerMode.Responsive">
            <DrawerContent>
                <Grid>
                    <ScrollViewer VerticalScrollMode="ScrollMode.Enabled">
                        <ListBox TListBox="string" Margin="10,0,10,0">
                            <ListBoxItem Text="Home" HRef="/" OnClicked=@Close />
                            <ListBoxItem Text="Components">
                                <ListBoxItem Text="Layout" InitiallyExpanded=true>
                                    <ListBoxItem Text="Grid" HRef="/Grid" OnClicked=@Close />
                                    <ListBoxItem Text="Stack Panel" HRef="/StackPanel" OnClicked=@Close />
                                    <ListBoxItem Text="Wrap Panel" HRef="/WrapPanel" OnClicked=@Close />
                                    <ListBoxItem Text="Dock Panel" HRef="/DockPanel" OnClicked=@Close />
                                    <ListBoxItem Text="Uniform Grid" HRef="/UniformGrid" OnClicked=@Close />
                                    <ListBoxItem Text="Tab Panel" HRef="/TabPanel" OnClicked=@Close />
                                    <ListBoxItem Text="Drawer" HRef="/Drawer" OnClicked=@Close />
                                    <ListBoxItem Text="Drawing Canvas" HRef="/DrawingCanvas" OnClicked=@Close />
                                    <ListBoxItem Text="Card" HRef="/Card" OnClicked=@Close />
                                </ListBoxItem>
                                <ListBoxItem Text="Table" HRef="/Table" OnClicked=@Close />
                                <ListBoxItem Text="TextBlock" HRef="/TextBlock" OnClicked=@Close />
                                <ListBoxItem Text="Icons" HRef="/Icons" OnClicked=@Close />
                                <ListBoxItem Text="Avatars" HRef="/Avatars" OnClicked=@Close />
                                <ListBoxItem Text="AppBar" HRef="/AppBar" OnClicked=@Close />
                                <ListBoxItem Text="Images" HRef="/Images" OnClicked=@Close />
                                <ListBoxItem Text="Buttons" InitiallyExpanded=false>
                                    <ListBoxItem Text="Button" HRef="/Button" OnClicked=@Close />
                                    <ListBoxItem Text="Icon Button" HRef="/IconButton" OnClicked=@Close />
                                    <ListBoxItem Text="Toggle Icon Button" HRef="/ToggleIconButton" OnClicked=@Close />
                                    <ListBoxItem Text="Button Group" HRef="/ButtonGroup" OnClicked=@Close />
                                </ListBoxItem>
                                <ListBoxItem Text="Pickers" InitiallyExpanded=false>
                                    <ListBoxItem Text="Colour Picker" HRef="/ColourPicker" OnClicked=@Close />
                                    <ListBoxItem Text="Date Picker" HRef="/DatePicker" OnClicked=@Close />
                                    <ListBoxItem Text="Time Picker" HRef="/TimePicker" OnClicked=@Close />
                                </ListBoxItem>
                                <ListBoxItem Text="ToolTip" HRef="/ToolTip" OnClicked=@Close />
                                <ListBoxItem Text="Toolbar" HRef="/Toolbar" OnClicked=@Close />
                                <ListBoxItem Text="ListBox" HRef="/ListBox" OnClicked=@Close />
                                <ListBoxItem Text="Popup" HRef="/Popup" OnClicked=@Close />
                                <ListBoxItem Text="Inputs" InitiallyExpanded=false>
                                    <ListBoxItem Text="Check Box" HRef="/CheckBox" OnClicked=@Close />
                                    <ListBoxItem Text="Switch" HRef="/Switch" OnClicked=@Close />
                                    <ListBoxItem Text="Radio Button" HRef="/Radio" OnClicked=@Close />
                                    <ListBoxItem Text="Text Input" HRef="/TextInput" OnClicked=@Close />
                                    <ListBoxItem Text="Numeric Input" HRef="/NumericInput" OnClicked=@Close />
                                    <ListBoxItem Text="Select" HRef="/Select" OnClicked=@Close />
                                    <ListBoxItem Text="Slider" HRef="/Slider" OnClicked=@Close />
                                    <ListBoxItem Text="Colour Picker" HRef="/ColourPickerInput" OnClicked=@Close />
                                    <ListBoxItem Text="Date Picker" HRef="/DatePickerInput" OnClicked=@Close />
                                    <ListBoxItem Text="Time Picker" HRef="/TimePickerInput" OnClicked=@Close />
                                </ListBoxItem>
                                <ListBoxItem Text="Forms" InitiallyExpanded=false>
                                    <ListBoxItem Text="Form" HRef="/Form" OnClicked=@Close />
                                    <ListBoxItem Text="Auto Form" HRef="/AutoForm" OnClicked=@Close />
                                </ListBoxItem>
                                <ListBoxItem Text="Logs" HRef="/Logs" OnClicked=@Close />
                            </ListBoxItem>
                        </ListBox>
                    </ScrollViewer>
                </Grid>
            </DrawerContent>
            <DrawerBody>
                <Grid Margin="10">
                    <DockPanel>
                        <Grid Dock="Dock.Top" BorderThickness="0" HorizontalAlignment="Alignment.End">
                            <IconButton OnClicked=@OnClicked Icon=@GetIcon() ToolTip="Toggle Light/Dark Mode" Margin="0,0,10,0" />
                        </Grid>
                        <Grid>
                            @Body
                        </Grid>
                    </DockPanel>
                </Grid>
            </DrawerBody>
        </Drawer>
    </Grid>
 </RootComponent>

@code {
    Drawer Drawer;

    bool Open { get; set; } = false;

    private void Toggle()
    {
        Open = !Open;
    }

    private string GetIcon()
    {
        if (ThemeManager.IsDarkMode)
            return Icons.Material.Filled.LightMode;
        else
            return Icons.Material.Filled.DarkMode;
    }

    private void OnClicked()
    {
        ThemeManager.IsDarkMode = !ThemeManager.IsDarkMode;
    }

    private void Close()
    {
        if (Drawer.CurrentDrawerMode == DrawerMode.Temporary)
        {
            Open = false;
            StateHasChanged();
        }
    }

    private void MenuClicked()
    {
        Toggle();
        StateHasChanged();
    }

    private void GotoPage(string page)
    {
        NavManager.NavigateTo($"/{page}");
    }

    private void CheckedChanged()
    {
        StateHasChanged();
    }

    Task IHandleEvent.HandleEventAsync(
          EventCallbackWorkItem callback, object? arg) => callback.InvokeAsync(arg);

    public enum TestEnum
    {
        Enum1, Enum2, Enum3, Enum4
    }

    public TestEnum EnumValue { get; set; } = TestEnum.Enum2;


    List<string> StringValues = new() { "Potato", "Apricot" };
    List<double> DoubleValues = new() { 5.6, 4.0 };

    public List<string> Values { get; set; } = new() { "String2", "String3" };

    void Clicked()
    {
        StateHasChanged();
    }

}