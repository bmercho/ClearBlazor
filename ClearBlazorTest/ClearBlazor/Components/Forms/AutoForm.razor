@namespace ClearBlazor
@inherits Form

<CascadingValue Value="this" IsFixed="false">
    <div id="@Id" class="@Classes" style="@ComputeStyle()">
        <Grid Columns=@_cols RowSpacing="10">
            @foreach (var field in Fields)
            {
                @if (field.IsVisible)
                {
                    @if (HasLabelColumn)
                    {
                        @switch (field.ItemType)
                        {
                            case ItemType.CategoryHeader:
                                break;
                            case ItemType.CollectionClassHeader:
                            case ItemType.CollectionHeader:
                            case ItemType.ClassHeader:
                                <StackPanel Column="0" Row="GetFieldIndex(field)" Orientation="Orientation.Landscape" VerticalAlignment="Alignment.Center" Margin="0,10,0,0">
                                    <TextBlock Margin=@GetMargin(field) />
                                    @if (field.IsExpandVisible)
                                    {
                                        @*                                             <MudIcon Color="Color.Primary" Size="Size.Medium" Icon="@Icons.Material.Outlined.KeyboardArrowRight" Style="margin:0 0 0 -10px;"
                @onclick="@(e => AutoFormViewModel.ToggleExpand(field))" />
                *@      }
                                    @if (field.IsContractVisible)
                                    {
                                        @*                                             <MudIcon Color="Color.Primary" Size="Size.Medium" Icon="@Icons.Material.Outlined.KeyboardArrowDown" Style="margin:0 0 0 -10px;"
                @onclick="@(e => AutoFormViewModel.ToggleExpand(field))" />
                *@
                                    }
                                    <TextBlock Typography=@GetLabelTypography() ToolTip=@field.TooltipForName>@field.DisplayName</TextBlock>
                                </StackPanel>
                                break;
                            case ItemType.ClassItem:
                            case ItemType.ListItem:
                                <StackPanel Column="0" Row="Fields.IndexOf(field)" Orientation="Orientation.Landscape" VerticalAlignment="Alignment.Center">
                                    <TextBlock Margin=@GetMargin(field) />
                                    <TextBlock Typography=@GetLabelTypography() ToolTip=@field.TooltipForName>@field.DisplayName</TextBlock>
                                </StackPanel>
                                break;
                            default:
                                break;
                        }
                    }
                    @switch (field.ItemType)
                    {
                        case ItemType.CategoryHeader:
                            break;
                        case ItemType.CollectionHeader:
                            <Grid Columns="auto,*,auto" Margin="0,10,0,0">
@*                                 @if (field.HasError)
                                {
                                    <Grid Column="0" VerticalAlignment="Alignment.Start">
                                        <MudTooltip Text="@field.ValidationMessage">
                                            <MudIcon Icon="@Icons.Material.Filled.FmdBad" Color="Color.Error" />
                                        </MudTooltip>
                                    </Grid>
                                }
                *@
                                <Grid Column="1" Row="GetFieldIndex(field)">
                                    <TextBlock Typography=@GetLabelTypography()>(Collection)</TextBlock>
                                </Grid>
@*                                 @if (!_localIsReadOnly)
                                {
                                    <Grid Column="2" HorizontalAlignment="Alignment.End">
                                        <MudIcon Icon="@Icons.Material.Filled.Add" Color="Color.Success" Size="Size.Medium"
                                                 @onclick="@(e => AutoFormViewModel.AddCollectionItem(field))" />
                                    </Grid>
                                }
 *@                            </Grid>
                            break;
                        case ItemType.CollectionClassHeader:
@*                             <Grid Columns="*,auto" Margin="0,10,0,0">
                                @if (field.HasError)
                                {
                                    <Grid Column="0" VerticalAlignment="Alignment.Start">
                                        <MudTooltip Text="@field.ValidationMessage">
                                            <MudIcon Icon="@Icons.Material.Filled.FmdBad" Color="Color.Error" />
                                        </MudTooltip>
                                    </Grid>
                                }
                                @if (!_localIsReadOnly)
                                {
                                    <Grid Column="1">
                                        <MudIcon Icon="@Icons.Material.Filled.Remove" Color="Color.Error" Size="Size.Medium"
                                                 @onclick="@(e => DeleteCollectionItem(field))" />
                                    </Grid>
                                }
                            </Grid>
 *@                            break;
                        case ItemType.ClassHeader:
@*                             @if (field.HasError)
                            {
                                <Grid Column="1" VerticalAlignment="Alignment.Start" Margin="0,10,0,0">
                                    <MudTooltip Text="@field.ValidationMessage">
                                        <MudIcon Icon="@Icons.Material.Filled.FmdBad" Color="Color.Error" />
                                    </MudTooltip>
                                </Grid>
                            }
 *@                            break;
                        case ItemType.ClassItem:
                            <Grid Columns="*,auto" Column="1" Row="GetFieldIndex(field)">
@*                                 @if (field.HasError)
                                {
                                    <Grid Column="1" VerticalAlignment="Alignment.End">
                                        <MudTooltip Text="@field.ValidationMessage">
                                            <MudIcon Icon="@Icons.Material.Filled.FmdBad" Color="Color.Error" />
                                        </MudTooltip>
                                    </Grid>
                                }
 *@
                                <Grid Column="0" Padding="2">
                                    <DynamicComponent Type=@field.InputType Parameters="@field.InputParameters" />
                                </Grid>
                            </Grid>
                            break;
                        case ItemType.ListItem:
@*                             <Grid Columns="*,auto" Column="0" Row="GetFieldIndex(field)">
                                <DynamicComponent Type=@field.EditorType Parameters="@field.EditorParameters" />

                                @if (!_localIsReadOnly)
                                {
                                    <Grid Column="1">
                                        <MudIcon Icon="@Icons.Material.Filled.Remove" Color="Color.Error" Size="Size.Medium"
                                                 @onclick="@(e => DeleteCollectionItem(field))" />
                                    </Grid>
                                }
                            </Grid>
 *@                            break;
                        default:
                            break;
                    }

                }
            }
        </Grid>
    </div>
</CascadingValue>



