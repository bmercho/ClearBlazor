@using Microsoft.AspNetCore.Components
@namespace ClearBlazor
@typeparam TListBox
@inherits ClearComponentBase
<CascadingValue Value=this IsFixed="false">
    <div id="@Id" class="@Classes" style="@ComputeStyle()">
        <StackPanel Orientation=Orientation.Portrait HorizontalAlignment=Alignment.Stretch BackgroundColour=@Color.Transparent>
            <StackPanel Orientation=Orientation.Landscape HorizontalAlignment=@ContentAlignment Spacing=20
                        Padding=@LinePadding Class=@RowClasses
                        Style=@RowStyle
                        OnElementMouseEnter=@OnMouseEnter
                        OnElementMouseLeave=@OnMouseLeave
                OnClicked=@OnListItemClicked>
                @if (Multiselect && !HasChildren)
                {
                    @if (IsSelected)
                    {
                        <MaterialIcon VerticalAlignment=Alignment.Center Size=@RowSize
                                      Colour=@GetColour() Icon=@Icons.Material.Filled.CheckBox />
                    }
                    else
                    {
                        <MaterialIcon VerticalAlignment=Alignment.Center Size=@RowSize
                                      Colour=@GetColour() Icon=@Icons.Material.Filled.CheckBoxOutlineBlank />
                    }
                }

                @if (Icon != null)
                {
                    <MaterialIcon Margin="0,7,0,7" Size=@RowSize Icon=@Icon Colour=@GetColour()
                                  HorizontalAlignment=Alignment.Center VerticalAlignment=Alignment.Center />
                }
                else if (Avatar != null)
                {
                    <Avatar HorizontalAlignment=Alignment.Center VerticalAlignment=Alignment.Center
                            AvatarStyle=TextEditFillMode.None Size=@RowSize Icon=@Avatar Colour=@GetColour()
                            IconColour=@GetColour() />
                }

                @if (Text != null)
                {
                    <TextBlock HorizontalAlignment=Alignment.Start
                               VerticalAlignment=Alignment.Center
                               FontSize=@FontSize
                               FontFamily="@FontFamily"
                               FontWeight="@FontWeight"
                               FontStyle="@FontStyle"
                               TextWrapping="TextWrap.NoWrap"
                               Colour=@GetColour()>@Text</TextBlock>

                }
                @if (HasChildren)
                {
                    @if (IsExpanded)
                    {
                        <MaterialIcon Colour=@GetColour() Size=Size.Normal Icon=@Icons.Material.Filled.ExpandLess VerticalAlignment=Alignment.Center />
                    }
                    else
                    {
                        <MaterialIcon Colour=@GetColour() Size=Size.Normal Icon=@Icons.Material.Filled.ExpandMore VerticalAlignment=Alignment.Center />
                    }
                }
            </StackPanel>
            @ChildContent
        </StackPanel>
    </div>
</CascadingValue>