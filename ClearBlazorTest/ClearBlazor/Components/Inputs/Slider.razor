@namespace ClearBlazor
@inherits InputBase
@typeparam TItem

<CascadingValue Value="this" IsFixed="false">
    <div id=@Id class=@Classes style=@ComputeStyle()>
        <StackPanel Orientation="Orientation.Portrait">
            @if (!string.IsNullOrEmpty(Label))
            {
                <div style="@GetLabelStyle() margin-bottom: 20px; ">@Label</div>
            }
            <div @ref="InputElement"></div>
            <Grid Rows="auto,auto">
                @if (BackgroundGradient1 == null && BackgroundGradient2 == null)
                {
                    <Grid Height=@TrackHeight CornerRadius=@CornerRadius BackgroundColor=BackgroundTrackColor
                            OnClicked=@OnTrackClicked />
                    <Grid Height=@TrackHeight Width=@TrackWidth HorizontalAlignment=Alignment.Start CornerRadius=@CornerRadius
                            BackgroundColor=TrackColor OnClicked=@OnTrackClicked />
                }
                @if (BackgroundGradient1 != null)
                {
                    <Grid Height=@TrackHeight CornerRadius=@CornerRadius BackgroundColor=@Color.Transparent
                            BackgroundGradient1=@BackgroundGradient1 OnClicked=@OnTrackClicked />
                }
                @if (BackgroundGradient2 != null)
                {
                    <Grid Height=@TrackHeight CornerRadius=@CornerRadius BackgroundColor=@Color.Transparent
                            BackgroundGradient2=@BackgroundGradient2 OnClicked=@OnTrackClicked />
                }
                @if (ShowTickMarks && Step != null)
                {
                    <Grid Row=1 Margin="-5,0,0,0" Rows="auto,auto" HorizontalAlignment=Alignment.Start>
                        @foreach (var info in TickInfo)
                        {
                            <Grid Height=@GetTickHeight() BorderColor=@TrackColor BorderThickness="2,0,0,0"
                                    Margin=@info.TickMargin />
                            @if (ShowTickMarkLabels)
                            {
                                <TextBlock Typography=@GetTypograghy() Margin=@info.TextMargin
                                           Row=1 HorizontalAlignment=Alignment.Start>@info.Text</TextBlock>
                            }
                        }
                    </Grid>
                }
                @if (!Initialising)
                {
                    <div id=@ThumbElementId style=@GetThumbStyle() class="slider-transition" @onmousedown=OnMouseDown
                         @onmouseup=OnMouseUp @onmousemove=OnMouseMove />
                }
                @if (ShowValueLabels)
                {
                    <Popup Position=PopupPosition.TopLeft Transform=PopupTransform.TopLeft Margin=@GetValueMargin()
                           @bind-Open=DropdownOpen CloseOnOutsideClick=false>
                        <Grid BorderThickness=1 BackgroundColor=Color.BackgroundGrey CornerRadius=2>
                            <TextBlock Typography=@GetTypograghy() VerticalAlignment=Alignment.Center 
                                       Margin="0,5,0,5" >@ValueLabel</TextBlock>
                        </Grid>
                    </Popup>
                }
            </Grid>
        </StackPanel>
    </div>
</CascadingValue>



